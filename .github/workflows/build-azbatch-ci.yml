name: DEV Workflow Azure Batch (Nodejs.)

on:
  workflow_dispatch:
  push:
    branches: 
      - 'rc/**'

env: 
    JobEnvironment: "dev"
    PackageName: ${{github.event.repository.name}}
    # ACR
    AZ_CONTAINER_REGISTRY: ${{ fromJson(vars.JSON).AZ_CONTAINER_REGISTRY }}
    AZ_CONTAINER_NAME: ${{ fromJson(vars.JSON).AZ_CONTAINER_NAME }}
    #HELM repo
    HELM_TEMPLATE_REPO: ${{ fromJson(vars.JSON).HELM_TEMPLATE_REPO }}
    HELM_TEMPLATE_BRANCH: ${{ fromJson(vars.JSON).HELM_TEMPLATE_BRANCH }}
    HELM_VALUES_REPO: ${{ fromJson(vars.JSON).HELM_VALUES_REPO }}
    HELM_VALUES_BRANCH: ${{ fromJson(vars.JSON).HELM_VALUES_BRANCH }}
    # Azure Blob Stotage 
    BLOB_STORAGE_ACC: ${{ fromJson(vars.JSON).BLOB_STORAGE_ACC }}
    BLOB_CONTAINER_NAME: ${{ fromJson(vars.JSON).BLOB_CONTAINER_NAME }}
    BLOB_CONTAINER_NAME_CONTENT: ${{ fromJson(vars.JSON).BLOB_CONTAINER_NAME_CONTENT }}
    BLOB_CONTAINER_NAME_AZ_BATCH: ${{ fromJson(vars.JSON).BLOB_CONTAINER_NAME_AZ_BATCH }}
    # AKS
    AKS_RESOURCE_GROUP: ${{ fromJson(vars.JSON).AKS_RESOURCE_GROUP }}
    AKS_NAME: ${{ fromJson(vars.JSON).AKS_NAME }}
    ## Define Workspace
    Workspace_Dir: "shared-workspace"

jobs:
  env_workflow:
    runs-on: ubuntu-latest
    name: Preparation Environment
    outputs: 
      user: ${{env.docker_user}}
      pass: ${{env.docker_password}}
      JobEnvironment: ${{env.JobEnvironment}}
      PackageName: ${{env.PackageName}}
      AZ_CONTAINER_REGISTRY: ${{env.AZ_CONTAINER_REGISTRY}}
      AZ_CONTAINER_NAME: ${{env.AZ_CONTAINER_NAME}}
      HELM_TEMPLATE_REPO: ${{env.HELM_TEMPLATE_REPO}}
      HELM_TEMPLATE_BRANCH: ${{env.HELM_TEMPLATE_BRANCH}}
      HELM_VALUES_REPO: ${{env.HELM_VALUES_REPO}}
      HELM_VALUES_BRANCH: ${{env.HELM_VALUES_BRANCH}}
      BLOB_STORAGE_ACC: ${{env.BLOB_STORAGE_ACC}}
      BLOB_CONTAINER_NAME: ${{env.BLOB_CONTAINER_NAME}}
      BLOB_CONTAINER_NAME_CONTENT: ${{env.BLOB_CONTAINER_NAME_CONTENT}}
      BLOB_CONTAINER_NAME_AZ_BATCH: ${{env.BLOB_CONTAINER_NAME_AZ_BATCH}}
      AKS_RESOURCE_GROUP: ${{ env.AKS_RESOURCE_GROUP }}
      AKS_NAME: ${{ env.AKS_NAME }}
      Workspace_Dir: ${{ env.Workspace_Dir }}
    steps:
      - run: |
          echo "preparing output env"

  Checkout:
    runs-on: ubuntu-latest
    needs: [env_workflow]
    steps:
      - name: Checkout Source
        uses: actions/checkout@v3
        with: 
          ref: ${{github.ref_name}}
          path: app

      - name: Check out helmchart
        uses: actions/checkout@v3
        with:
          repository:  ${{needs.env_workflow.outputs.HELM_TEMPLATE_REPO}} 
          ref:  ${{needs.env_workflow.outputs.HELM_TEMPLATE_BRANCH}}
          path: helmchart

      - name: Check out helmvalue
        uses: actions/checkout@v3
        with:
          repository: ${{needs.env_workflow.outputs.HELM_VALUES_REPO}} 
          ref: ${{needs.env_workflow.outputs.HELM_VALUES_BRANCH}} 
          path: helmvalue

      - name: Save workspace
        run: |
          touch workspace.tar.gz
          tar --exclude=workspace.tar.gz -czf workspace.tar.gz .
        continue-on-error: true

      - name: Upload workspace artifact
        uses: actions/upload-artifact@v2
        with:
          name: workspace
          path: workspace.tar.gz

  Package_Versioning:
    needs: env_workflow
    name: Package versioning
    uses: MuZikZz-Org/action-workflow/.github/workflows/package-versioning.yaml@main
    with:
      Runtime: nodejs 
      JobEnvironment: ${{needs.env_workflow.outputs.JobEnvironment}}  #feature-branch 
      workspace: ${{needs.env_workflow.outputs.Workspace_Dir}}

  OUTPUT_PackageVersioning:
    runs-on: runner-utility
    needs: Package_Versioning
    steps:
      - run: |
          echo "Package Output form Workflow PackageVersioning: ${{ needs.Package_Versioning.outputs.PACKAGE_VERSION_NODEJS }}"
          
  Nodejs_Build:
    needs: [env_workflow,Package_Versioning]
    name: Build NodeJS Package
    uses: MuZikZz-Org/action-workflow/.github/workflows/nodejs-build.yaml@main
    with: 
      workspace: ${{needs.env_workflow.outputs.Workspace_Dir}}

  Upload_Storage_Account: 
    needs: [Nodejs_Build,env_workflow,Package_Versioning]
    name: "Compress file(zip,tar) and Upload to StorageAccount"
    uses: MuZikZz-Org/action-workflow/.github/workflows/blob-uploader.yaml@main
    with:
      workspace: ${{needs.env_workflow.outputs.Workspace_Dir}}
      AZURE_STORAGE_ACC_NAME: ${{needs.env_workflow.outputs.BLOB_STORAGE_ACC}}
      AZURE_CONTAINER_NAME: ${{needs.env_workflow.outputs.BLOB_CONTAINER_NAME_AZ_BATCH}}
      APP_NAME: ${{github.event.repository.name}}
      APP_VERSION: ${{ needs.Package_Versioning.outputs.PACKAGE_VERSION_NODEJS }} # use the output (app version) from package-versioning.yaml
      workspace: ${{needs.env_workflow.outputs.Workspace_Dir}}

  Git_Push_Version:
    needs: [Upload_Storage_Account,Nodejs_Build,Package_Versioning]
    name: "Pushing git Version"
    uses: MuZikZz-Org/action-workflow/.github/workflows/git-push-version.yaml@main
    with:
      APP_VERSION: ${{ needs.Package_Versioning.outputs.PACKAGE_VERSION_NODEJS }} # use the output (app version) from package-versioning.yaml
      Runtime: nodejs 
      SourceCodeBranch: ${{github.ref_name}}

  Git_Tag:
    needs: [Git_Push_Version,Package_Versioning]
    name: "Pushing git tag"
    uses: MuZikZz-Org/action-workflow/.github/workflows/git-push-tag.yaml@main
    with:
      APP_VERSION: ${{ needs.Package_Versioning.outputs.PACKAGE_VERSION_NODEJS }} # use the output (app version) from package-versioning.yaml
